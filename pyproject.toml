[project]
name = '@@MYPROJECT@@'
authors = [
    { name = 'Alice Smith', email = 'alice.smith@example.com' },
]
classifiers = [
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Operating System :: POSIX',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
]
description = 'Callables and modules for CSM usage.'
dependencies = []
dynamic = ['entry-points', 'scripts', 'version']
maintainers = [
    { name = 'Alice Smith', email = 'alice.smith@example.com'}
]
requires-python = '>=3.9'

[metadata]
url = 'https://github.com/@@MYORG@@/@@MYPROJECT@@'

license = { file = 'LICENSE' }

[project.optional-dependencies]
ci = [
    'nox~=2023.4.22',
]
docs = [
    'recommonmark~=0.7.1',
    'sphinx-autodoc-typehints~=1.24.0',
    'sphinx-copybutton~=0.5.2',
    'sphinx-markdown-tables~=0.0.17',
    'sphinx-rtd-theme~=1.3.0',
    'sphinx~=7.2.2',
]
lint = [
    'ruff~=0.0.280',
]
test = [
    'coverage~=7.1',
    'pytest~=7.2',
    'pytest-cov~=4.0',
    'ruff~=0.0.280',
    'mock~=5.0',
]

# Defines which folders belong to our package.
[tool.setuptools.packages.find]
include = ["@@MYPROJECT@@*"]
exclude = ["@@MYPROJECT@@.tests*"]

[tool.setuptools.dynamic]
entry-points = { file = ['entry_points.ini'] }
readme = { file = ['README.adoc'], content-type = 'text/asciidoc' }

# Allows for dynamic versioning via git-tag.
[tool.setuptools_scm]

[build-system]
build-backend = 'setuptools.build_meta'
requires = [
    'setuptools',
    'setuptools_scm[toml]',
    'wheel',
]

[tool.distutils.bdist_wheel]
universal = false # This app is not compatible with Python2.

[tool.ruff]
# Enable pycodestyle (`E`), Pyflakes (`F`), docstrings (`D`)
select = ["E", "F", "D", "PL"]
ignore = [
  "D104", # Missing docstring in public package
  "D107", # Missing docstring in `__init__`
  "D200", # One-line docstring should fit on one line
  "D203", # 1 blank line required before class docstring
  "D205", # 1 blank line required between summary line and description
  "D212"  # Multi-line docstring summary should start at the first line
  ]

# Allow autofix for all enabled rules (when `--fix`) is provided.
# fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

line-length = 120

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
